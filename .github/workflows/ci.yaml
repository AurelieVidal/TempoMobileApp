name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build, Lint and Test
    runs-on: ubuntu-latest # Switch to Ubuntu runner

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up our JDK environment
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17' # Updated to Java 17

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Cache Gradle and wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      # Run emulator and Android tests
      - name: Run Android tests on emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          disable-gpu: true
          script: adb wait-for-device && ./gradlew connectedDebugAndroidTest
      # Génération et fusion des rapports Jacoco
      # Run emulator and Android tests
      - name: Generate Jacoco Test Report
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew jacocoTestReport
          emulator-boot-timeout: 1200 # Increased timeout to 20 minutes
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none

      - name: Install XMLLint
        run: sudo apt-get install -y libxml2-utils

      # Vérification du rapport de couverture
      - name: Verify Coverage
        run: |
          if [ -f app/build/reports/jacoco/jacocoTestReport/html/index.html ]; then
            echo "Jacoco Test Report generated successfully."
          else
            echo "Jacoco Test Report not found!" && exit 1
          fi

      # Vérification du taux de couverture
      - name: Check Coverage Threshold
        run: |
          COVERAGE=$(xmllint --xpath "string(//report/counter[@type='LINE']/@covered)" app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml)
          TOTAL=$(xmllint --xpath "string(//report/counter[@type='LINE']/@missed)" app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml)
          TOTAL=$(($COVERAGE + $TOTAL))
          PERCENTAGE=$((COVERAGE * 100 / TOTAL))
          echo "Coverage is $PERCENTAGE%"
          if [ "$PERCENTAGE" -lt 80 ]; then
            echo "Coverage threshold not met: $PERCENTAGE% (required: 90%)"
            exit 1
          fi

      # Ajouter Detekt pour la vérification de la qualité du code
      - name: Run Detekt for linting
        run: ./gradlew detekt

      # Vérification des rapports Detekt
      - name: Verify Detekt Report
        run: |
          if [ -f app/build/reports/detekt/detekt.html ]; then
            echo "Detekt report generated successfully."
          else
            echo "Detekt report not found!" && exit 1
          fi

      # Vérifier les erreurs de style avec Detekt
      - name: Check Detekt Errors
        run: |
          DETEKT_EXIT_CODE=$(./gradlew detekt --quiet || echo $?)
          if [ "$DETEKT_EXIT_CODE" -ne 0 ]; then
            echo "Detekt found issues in the code"
            exit $DETEKT_EXIT_CODE
          fi