name: Android CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  WAIT_FOR_EMULATOR: 300  # Temps d'attente en secondes (5 minutes)

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - name: Run Detekt Analysis
        uses: gradle/gradle-build-action@v2
        with:
          arguments: detekt

      - name: Upload Detekt Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: detekt-report
          path: app/build/reports/detekt/

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Start Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: pixel
          emulator-options: "-no-window -gpu swiftshader_indirect -no-boot-anim -noaudio -camera-back none"
          disable-animations: true
          script: ./gradlew connectedDebugAndroidTest

      - name: Wait for emulator to fully boot
        run: |
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'

      - name: Run Unit Tests and Coverage
        run: ./gradlew clean testDebugUnitTest jacocoTestReport

      - name: Upload JaCoCo Coverage Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: app/build/reports/jacoco/jacocoTestReport/html/

      - name: Check JaCoCo Coverage
        run: |
          coverage=$(grep -oP 'line-rate="\K[0-9.]*' app/build/reports/jacoco/jacocoTestReport/html/index.html)
          echo "Current coverage: $coverage"
          
          if (( $(echo "$coverage < 0.90" | bc -l) )); then
            echo "Coverage is below 90%, failing the build."
            exit 1
          fi
